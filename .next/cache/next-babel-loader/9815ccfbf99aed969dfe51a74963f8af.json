{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var request = function request() {\n  var res, json;\n  return _regeneratorRuntime.async(function request$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.spaceXdata.com/v3/launches?limit=100'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getYears = function getYears(data) {\n  var year = [];\n  data.forEach(function (item) {\n    if (year.indexOf(item.launch_year) == -1) {\n      year.push(item.launch_year);\n    }\n  });\n  return year;\n};","map":{"version":3,"sources":["C:/Users/digit/Desktop/interview-test/interview-test/src/utils/index.js"],"names":["request","fetch","res","json","getYears","data","year","forEach","item","indexOf","launch_year","push"],"mappings":";AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHC,KAAK,CAAC,kDAAD,CADF;;AAAA;AACfC,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfA,UAAAA,IAFe;AAAA,2CAGdA,IAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAMP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AAC9B,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnB,QAAIF,IAAI,CAACG,OAAL,CAAaD,IAAI,CAACE,WAAlB,KAAkC,CAAC,CAAvC,EAA0C;AACxCJ,MAAAA,IAAI,CAACK,IAAL,CAAUH,IAAI,CAACE,WAAf;AACD;AACF,GAJD;AAKA,SAAOJ,IAAP;AACD,CARM","sourcesContent":["export const request = async () => {\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100')\n  const json = await res.json()\n  return json\n}\n\nexport const getYears = data => {\n  let year = []\n  data.forEach(item => {\n    if (year.indexOf(item.launch_year) == -1) {\n      year.push(item.launch_year)\n    }\n  })\n  return year\n}\n"]},"metadata":{},"sourceType":"module"}