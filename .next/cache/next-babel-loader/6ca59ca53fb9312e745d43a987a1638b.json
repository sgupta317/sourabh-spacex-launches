{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const request = async () => {\n  const url = 'https://api.spaceXdata.com/v3/launches';\n  const res = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(_objectSpread({\n      limit: 100\n    }, requestOptions))\n  });\n  const json = await res.json();\n  return json;\n};","map":{"version":3,"sources":["/Users/anskhull/Downloads/test/interview-test/interview-test/src/utils/index.js"],"names":["request","url","res","fetch","method","headers","body","JSON","stringify","limit","requestOptions","json"],"mappings":";;;;;;AAAA,OAAO,MAAMA,OAAO,GAAG,YAAY;AACjC,QAAMC,GAAG,GAAG,wCAAZ;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC3BG,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFkB;AAK3BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AACJC,MAAAA,KAAK,EAAE;AADH,OAEDC,cAFC;AALqB,GAAN,CAAvB;AAUA,QAAMC,IAAI,GAAG,MAAMT,GAAG,CAACS,IAAJ,EAAnB;AACA,SAAOA,IAAP;AACD,CAdM","sourcesContent":["export const request = async () => {\n  const url = 'https://api.spaceXdata.com/v3/launches'\n  const res = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      limit: 100,\n      ...requestOptions,\n    }),\n  })\n  const json = await res.json()\n  return json\n}\n"]},"metadata":{},"sourceType":"module"}