{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var request = function request() {\n  var params,\n      query,\n      url,\n      res,\n      json,\n      _args = arguments;\n  return _regeneratorRuntime.async(function request$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n          query = Object.keys(params).map(function (k) {\n            return encodeURIComponent(k) + '=' + encodeURIComponent(params[k]);\n          }).join('&');\n          url = \"https://api.spaceXdata.com/v3/launches\".concat(query);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'GET',\n            data: _objectSpread({\n              limit: '100'\n            }, requestOptions)\n          }));\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/anskhull/Downloads/test/interview-test/interview-test/src/utils/index.js"],"names":["request","params","query","Object","keys","map","k","encodeURIComponent","join","url","fetch","method","data","limit","requestOptions","res","json"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,UAAAA,MAAP,2DAAgB,EAAhB;AACjBC,UAAAA,KADiB,GACTC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACTI,GADS,CACL,UAAAC,CAAC;AAAA,mBAAIC,kBAAkB,CAACD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BC,kBAAkB,CAACN,MAAM,CAACK,CAAD,CAAP,CAApD;AAAA,WADI,EAETE,IAFS,CAEJ,GAFI,CADS;AAKfC,UAAAA,GALe,mDAKgCP,KALhC;AAAA;AAAA,2CAOHQ,KAAK,CAACD,GAAD,EAAM;AAC3BE,YAAAA,MAAM,EAAE,KADmB;AAE3BC,YAAAA,IAAI;AACFC,cAAAA,KAAK,EAAE;AADL,eAECC,cAFD;AAFuB,WAAN,CAPF;;AAAA;AAOfC,UAAAA,GAPe;AAAA;AAAA,2CAcFA,GAAG,CAACC,IAAJ,EAdE;;AAAA;AAcfA,UAAAA,IAde;AAAA,2CAedA,IAfc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["export const request = async (params = {}) => {\n  let query = Object.keys(params)\n    .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n    .join('&')\n\n  const url = `https://api.spaceXdata.com/v3/launches${query}`\n\n  const res = await fetch(url, {\n    method: 'GET',\n    data: {\n      limit: '100',\n      ...requestOptions,\n    },\n  })\n  const json = await res.json()\n  return json\n}\n"]},"metadata":{},"sourceType":"module"}