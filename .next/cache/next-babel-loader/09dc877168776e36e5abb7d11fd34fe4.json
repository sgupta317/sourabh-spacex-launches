{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var request = function request() {\n  var params,\n      requestParam,\n      query,\n      url,\n      res,\n      json,\n      _args = arguments;\n  return _regeneratorRuntime.async(function request$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n          requestParam = _objectSpread({\n            limits: '100'\n          }, params);\n          query = Object.keys(requestParam).map(function (k) {\n            return encodeURIComponent(k) + '=' + encodeURIComponent(params[k]);\n          }).join('&');\n          url = \"https://api.spaceXdata.com/v3/launches?\".concat(query);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/anskhull/Downloads/test/interview-test/interview-test/src/utils/index.js"],"names":["request","params","requestParam","limits","query","Object","keys","map","k","encodeURIComponent","join","url","fetch","res","json"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,UAAAA,MAAP,2DAAgB,EAAhB;AACfC,UAAAA,YADe;AAEnBC,YAAAA,MAAM,EAAE;AAFW,aAGhBF,MAHgB;AAKjBG,UAAAA,KALiB,GAKTC,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EACTK,GADS,CACL,UAAAC,CAAC;AAAA,mBAAIC,kBAAkB,CAACD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BC,kBAAkB,CAACR,MAAM,CAACO,CAAD,CAAP,CAApD;AAAA,WADI,EAETE,IAFS,CAEJ,GAFI,CALS;AAQfC,UAAAA,GARe,oDAQiCP,KARjC;AAAA;AAAA,2CASHQ,KAAK,CAACD,GAAD,CATF;;AAAA;AASfE,UAAAA,GATe;AAAA;AAAA,2CAUFA,GAAG,CAACC,IAAJ,EAVE;;AAAA;AAUfA,UAAAA,IAVe;AAAA,2CAWdA,IAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["export const request = async (params = {}) => {\n  const requestParam = {\n    limits: '100',\n    ...params,\n  }\n  let query = Object.keys(requestParam)\n    .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n    .join('&')\n  const url = `https://api.spaceXdata.com/v3/launches?${query}`\n  const res = await fetch(url)\n  const json = await res.json()\n  return json\n}\n"]},"metadata":{},"sourceType":"module"}