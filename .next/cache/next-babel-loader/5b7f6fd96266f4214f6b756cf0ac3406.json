{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const request = async (params = {}) => {\n  let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n  const url = `https://api.spaceXdata.com/v3/launches${query}`;\n  const res = await fetch(url, {\n    method: 'GET',\n    data: _objectSpread({\n      limit: '100'\n    }, requestOptions)\n  });\n  const json = await res.json();\n  return json;\n};","map":{"version":3,"sources":["/Users/anskhull/Downloads/test/interview-test/interview-test/src/utils/index.js"],"names":["request","params","query","Object","keys","map","k","encodeURIComponent","join","url","res","fetch","method","data","limit","requestOptions","json"],"mappings":";;;;;;AAAA,OAAO,MAAMA,OAAO,GAAG,OAAOC,MAAM,GAAG,EAAhB,KAAuB;AAC5C,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACTI,GADS,CACLC,CAAC,IAAIC,kBAAkB,CAACD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BC,kBAAkB,CAACN,MAAM,CAACK,CAAD,CAAP,CADhD,EAETE,IAFS,CAEJ,GAFI,CAAZ;AAIA,QAAMC,GAAG,GAAI,yCAAwCP,KAAM,EAA3D;AAEA,QAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC3BG,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,IAAI;AACFC,MAAAA,KAAK,EAAE;AADL,OAECC,cAFD;AAFuB,GAAN,CAAvB;AAOA,QAAMC,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAJ,EAAnB;AACA,SAAOA,IAAP;AACD,CAhBM","sourcesContent":["export const request = async (params = {}) => {\n  let query = Object.keys(params)\n    .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n    .join('&')\n\n  const url = `https://api.spaceXdata.com/v3/launches${query}`\n\n  const res = await fetch(url, {\n    method: 'GET',\n    data: {\n      limit: '100',\n      ...requestOptions,\n    },\n  })\n  const json = await res.json()\n  return json\n}\n"]},"metadata":{},"sourceType":"module"}